
const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');

const token = process.env.BOT_TOKEN; // –¢–æ–∫–µ–Ω –±—É–¥–µ—Ç –±—Ä–∞—Ç—å—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
const bot = new TelegramBot(token, { polling: true });

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–æ–≤ JSON
const sportsData = JSON.parse(fs.readFileSync('./data/sport.json', 'utf8'));
const venuesData = JSON.parse(fs.readFileSync('./data/venues.json', 'utf8'));

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;

    const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç ${msg.from.first_name} ${msg.from.last_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ U-sport, —É –Ω–∞—Å —Ç—ã –º–æ–∂–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å, –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π`;

    const options = {
        reply_markup: JSON.stringify({
            keyboard: [
                ['–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ'],
                ['–°–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å—ã', '–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞'],
                ['–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤']
            ],
            resize_keyboard: true
        })
    };

    bot.sendMessage(chatId, welcomeMessage, options);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ"
bot.onText(/–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ/, (msg) => {
    const chatId = msg.chat.id;
    const logoSportPath = './images/logoSport.png'; // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ images

    const caption = '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ';

    if (fs.existsSync(logoSportPath)) {
        bot.sendPhoto(chatId, fs.createReadStream(logoSportPath), {
            caption: caption,
            parse_mode: 'HTML',
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url: 'https://usports.online/' }]
                ]
            }
        });
    } else {
        bot.sendMessage(chatId, caption, {
            parse_mode: 'HTML',
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url: 'https://usports.online/' }]
                ]
            }
        });
    }
});

bot.onText(/–°–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å—ã/, (msg) => {
    const chatId = msg.chat.id;

    const sportComplexesMessage = `–í—ã–±–µ—Ä–∏ —Å–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å:`;

    const options = {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–†–∞–¥—É–≥–∞üåà', callback_data: 'raduga' }],
                [{ text: '–°–æ–ø–∫–∞üèîÔ∏è', callback_data: 'sopka' }]
            ]
        }
    };

    bot.sendMessage(chatId, sportComplexesMessage, options);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è inline –∫–Ω–æ–ø–æ–∫ —Å–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å–æ–≤
bot.on('callback_query', (callbackQuery) => {
    const data = callbackQuery.data;
    const chatId = callbackQuery.message.chat.id;
    const messageId = callbackQuery.message.message_id;

    const venue = venuesData[data]; // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å–∞
    if (venue) {
        const sportsMessage = `–°–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å "${venue.name}"\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${venue.working_hours}\n–ê–¥—Ä–µ—Å: ${venue.address}`;

        const options = {
            reply_markup: {
                inline_keyboard: venue.sports.map(sportKey => {
                    return [{ text: sportsData[sportKey].name, url: sportsData[sportKey].url }];
                }).concat([[{ text: '–ù–∞–∑–∞–¥', callback_data: 'back_to_complexes' }]])
            }
        };

        bot.deleteMessage(chatId, messageId) // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–í—ã–±–µ—Ä–∏ —Å–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å"
            .then(() => bot.sendMessage(chatId, sportsMessage, options)) // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∏–¥–∞–º–∏ —Å–ø–æ—Ä—Ç–∞
            .catch((error) => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error));
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ —Å–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å–∞—Ö
bot.on('callback_query', (callbackQuery) => {
    const data = callbackQuery.data;
    const chatId = callbackQuery.message.chat.id;
    const messageId = callbackQuery.message.message_id;

    if (data === 'back_to_complexes') {
        const sportComplexesMessage = `–í—ã–±–µ—Ä–∏ —Å–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å:`;

        const options = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–†–∞–¥—É–≥–∞üåà', callback_data: 'raduga' }],
                    [{ text: '–°–æ–ø–∫–∞üèîÔ∏è', callback_data: 'sopka' }]
                ]
            }
        };

        bot.deleteMessage(chatId, messageId) // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            .then(() => bot.sendMessage(chatId, sportComplexesMessage, options)) // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å–æ–≤
            .catch((error) => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error));
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞"
bot.onText(/–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞/, (msg) => {
    const chatId = msg.chat.id;

    const sportsMessage = `–í—ã–±–µ—Ä–∏ –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞:`;

    const options = {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–ü–ª–∞–≤–∞–Ω–∏–µüê≥', callback_data: 'swimming' }, { text: '–ë–∞—Å–∫–µ—Ç–±–æ–ªüèÄ', callback_data: 'basketball' }],
                [{ text: '–í–æ–ª–µ–π–±–æ–ªüèê', callback_data: 'volleyball' }, { text: '–õ—ã–∂–∏üéø', callback_data: 'skiing' }],
                [{ text: '–°–∫–≤–æ—àü§ôüèΩ', callback_data: 'squash' }, { text: '–ù–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Åüèì', callback_data: 'table_tennis' }],
                [{ text: '–¢—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ªüèãüèΩ', callback_data: 'gym' }]
            ]
        }
    };

    bot.sendMessage(chatId, sportsMessage, options);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è inline –∫–Ω–æ–ø–æ–∫ –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞
bot.on('callback_query', (callbackQuery) => {
    const data = callbackQuery.data;
    const chatId = callbackQuery.message.chat.id;
    const messageId = callbackQuery.message.message_id;

    const sport = sportsData[data]; // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ —Å–ø–æ—Ä—Ç–∞
    if (sport) {
        const photoPath = sport.photo; // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ JSON
        let caption = `<b>${sport.name}</b>\n\n–ê–¥—Ä–µ—Å –ø–ª–æ—â–∞–¥–∫–∏: ${sport.address}\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${sport.schedule}\n\n–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n${sport.description}`;

        if (sport.additional) {
            caption += `\n\n<i>${sport.additional}</i>`; 
        }
        const options = {
            parse_mode: 'HTML',
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url: sport.url }],
                    [{ text: '–ù–∞–∑–∞–¥', callback_data: 'back_to_sports' }]
                ]
            }
        };

        bot.deleteMessage(chatId, messageId) // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            .then(() => {
                if (fs.existsSync(photoPath)) {
                    bot.sendPhoto(chatId, photoPath, {
                        caption: caption,
                        ...options
                    });
                } else {
                    bot.sendMessage(chatId, caption, options);
                }
            })
            .catch((error) => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error));
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ "–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞"
bot.on('callback_query', (callbackQuery) => {
    const data = callbackQuery.data;
    const chatId = callbackQuery.message.chat.id;
    const messageId = callbackQuery.message.message_id;

    if (data === 'back_to_sports') {
        const sportsMessage = `–í—ã–±–µ—Ä–∏ –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞:`;

        const options = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ü–ª–∞–≤–∞–Ω–∏–µüê≥', callback_data: 'swimming' }, { text: '–ë–∞—Å–∫–µ—Ç–±–æ–ªüèÄ', callback_data: 'basketball' }],
                    [{ text: '–í–æ–ª–µ–π–±–æ–ªüèê', callback_data: 'volleyball' }, { text: '–õ—ã–∂–∏üéø', callback_data: 'skiing' }],
                    [{ text: '–°–∫–≤–æ—àü§ôüèΩ', callback_data: 'squash' }, { text: '–ù–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Åüèì', callback_data: 'table_tennis' }],
                    [{ text: '–¢—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ªüèãüèΩ', callback_data: 'gym' }]
                ]
            }
        };

        bot.deleteMessage(chatId, messageId) // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            .then(() => bot.sendMessage(chatId, sportsMessage, options)) // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞
            .catch((error) => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error));
    }
});

let feedbackState = {};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"
bot.onText(/–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤/, (msg) => {
    const chatId = msg.chat.id;

    // –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤—ã–±—Ä–∞—Ç—å –ø–ª–æ—â–∞–¥–∫—É
    const feedbackMessage = `–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–æ—â–∞–¥–∫—É, –æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤:`;

    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏
    const options = {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{ text: '–†–∞–¥—É–≥–∞', callback_data: 'feedback_raduga' }],
                [{ text: '–°–æ–ø–∫–∞', callback_data: 'feedback_sopka' }]
            ]
        })
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –ø–ª–æ—â–∞–¥–∫–∏
    bot.sendMessage(chatId, feedbackMessage, options);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏
bot.on('callback_query', (callbackQuery) => {
    const data = callbackQuery.data;
    const chatId = callbackQuery.message.chat.id;

    if (data === 'feedback_raduga' || data === 'feedback_sopka') {
        let selectedPlace = ''; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏

        if (data === 'feedback_raduga') {
            selectedPlace = '#—Ä–∞–¥—É–≥–∞'; // –ü–æ–º–µ—Ç–∫–∞ –¥–ª—è "–†–∞–¥—É–≥–∏"
        } else if (data === 'feedback_sopka') {
            selectedPlace = '#—Å–æ–ø–∫–∞'; // –ü–æ–º–µ—Ç–∫–∞ –¥–ª—è "–°–æ–ø–∫–∏"
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        feedbackState[chatId] = selectedPlace;

        // –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏ –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
        bot.sendMessage(chatId, '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –º—ã –ø–µ—Ä–µ–¥–∞–¥–∏–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.', {
            reply_markup: { force_reply: true }
        });
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
bot.on('message', (msg) => {
    const chatId = msg.chat.id;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    if (msg.reply_to_message && msg.reply_to_message.text === '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –º—ã –ø–µ—Ä–µ–¥–∞–¥–∏–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.') {
        const feedback = msg.text;
        const userId = msg.from.id;
        const userName = msg.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ –ø–ª–æ—â–∞–¥–∫–∞
        const selectedPlace = feedbackState[chatId] || '#–±–µ–∑_–ø–ª–æ—â–∞–¥–∫–∏'; // –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–∏

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–º–µ—Ç–∫–æ–π –ø–ª–æ—â–∞–¥–∫–∏
        const feedbackMessage = `<a href="tg://user?id=${userId}">${userName}</a> –æ—Å—Ç–∞–≤–∏–ª –æ—Ç–∑—ã–≤: ${feedback}\n${selectedPlace}`;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª —Å –ø–æ–º–µ—Ç–∫–æ–π –ø–ª–æ—â–∞–¥–∫–∏
        const adminChatId = '-1002011198578'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ ID –∫–∞–Ω–∞–ª–∞
        bot.sendMessage(adminChatId, feedbackMessage, { parse_mode: 'HTML' });

        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        delete feedbackState[chatId];

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        const mainMenuOptions = {
            reply_markup: JSON.stringify({
                keyboard: [
                    ['–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ'],
                    ['–°–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å—ã', '–í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞'],
                    ['–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤']
                ],
                resize_keyboard: true
            })
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        bot.sendMessage(chatId, '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.', mainMenuOptions);
    }
});

